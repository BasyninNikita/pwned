- name: check
  uri:
    url: "https://haveibeenpwned.com/api/v3/breachedaccount/{{ item.mail }}"
    validate_certs: false
    method: GET
    headers:
      hibp-api-key: "{{ apikey }}"
  ignore_errors: yes
  register: result

- set_fact:
    info3: "{{ result.json | map(attribute='Name') | join(';') }}"
  when: result is succeeded

- copy:
    content: "{{ info3 }}"
    dest: "osint/files/base"

- name: Ansible replace PDL
  replace:
    path: "osint/files/base"
    regexp: 'PDL'
    replace: "Data_Enrichment_Exposure_From_PDL_Customer_(2019)"

- name: Ansible replace Adapt
  replace:
    path: "osint/files/base"
    regexp: 'Adapt'
    replace: "Adapt_(2018)"

- name: Ansible replace Apollo
  replace:
    path: "osint/files/base"
    regexp: 'Apollo'
    replace: "Adapt_(2018)"

- name: Ansible replace MyFitnessPal
  replace:
    path: "osint/files/base"
    regexp: 'MyFitnessPal'
    replace: "MyFitnessPal_(2018)"

- name: Ansible replace OnlinerSpambot
  replace:
    path: "osint/files/base"
    regexp: 'OnlinerSpambot'
    replace: "Onliner_Spambot_(2017)"

- name: Ansible replace Collection1
  replace:
    path: "osint/files/base"
    regexp: 'Collection1'
    replace: "Collection_1_(2019)"

- name: Ansible replace AntiPublic
  replace:
    path: "osint/files/base"
    regexp: 'AntiPublic'
    replace: "Anti_Public_Combo_List_(2016)"

- name: Ansible replace VK
  replace:
    path: "osint/files/base"
    regexp: 'VK'
    replace: "VK_(2012)"

- name: Ansible replace ExploitIn
  replace:
    path: "osint/files/base"
    regexp: 'ExploitIn'
    replace: "ExploitIn_(2016)"

- name: Ansible replace 2844Breaches
  replace:
    path: "osint/files/base"
    regexp: '2844Breaches'
    replace: "2,844_Separate_Data_Breaches_(2018)"

- name: Ansible replace LinkedIn
  replace:
    path: "osint/files/base"
    regexp: 'LinkedIn'
    replace: "LinkedIn_(2016)"

- name: Ansible replace LiveJournal
  replace:
    path: "osint/files/base"
    regexp: 'LiveJournal'
    replace: "LiveJournal_(2019)"

- name: Ansible replace Adobe
  replace:
    path: "osint/files/base"
    regexp: 'Adobe'
    replace: "Adobe_(2013)"

- name: Ansible replace VerificationsIO
  replace:
    path: "osint/files/base"
    regexp: 'VerificationsIO'
    replace: "Verificationsio_(2019)"	

- name: Ansible replace SHEIN
  replace:
    path: "osint/files/base"
    regexp: 'SHEIN'
    replace: "SHEIN_(2018)"

- name: Ansible replace Canva
  replace:
    path: "osint/files/base"
    regexp: 'Canva'
    replace: "Canva_(2019)"

- name: Ansible replace db8151dd
  replace:
    path: "osint/files/base"
    regexp: 'db8151dd'
    replace: "Covve_(2020)"	

- name: Ansible replace Dubsmash
  replace:
    path: "osint/files/base"
    regexp: 'Dubsmash'
    replace: "Dubsmash_(2018)"		

- name: Ansible replace Bookmate
  replace:
    path: "osint/files/base"
    regexp: 'Bookmate'
    replace: "Bookmate_(2018)"	

- name: Ansible replace Dropbox
  replace:
    path: "osint/files/base"
    regexp: 'Dropbox'
    replace: "Dropbox_(2012)"

- name: Ansible replace Wattpad
  replace:
    path: "osint/files/base"
    regexp: 'Wattpad'
    replace: "Wattpad_(2020)"

- name: Ansible replace CrossFire
  replace:
    path: "osint/files/base"
    regexp: 'CrossFire'
    replace: "Cross_Fire_(2016)"	

- name: Ansible replace KayoMoe
  replace:
    path: "osint/files/base"
    regexp: 'KayoMoe'
    replace: "Kayomoe_Credential_Stuffing_List_(2018)"

- name: Ansible replace YouveBeenScraped
  replace:
    path: "osint/files/base"
    regexp: 'YouveBeenScraped'
    replace: "You've_Been_Scraped_(2018)"

- name: Ansible replace ShareThis
  replace:
    path: "osint/files/base"
    regexp: 'ShareThis'
    replace: "ShareThis_(2018)"	

- name: Ansible replace LeadHunter
  replace:
    path: "osint/files/base"
    regexp: 'LeadHunter'
    replace: "Lead_Hunter_(2020)"

- name: Ansible replace Houzz
  replace:
    path: "osint/files/base"
    regexp: 'Houzz'
    replace: "Houzz_(2018)"

- name: Ansible replace KMRU
  replace:
    path: "osint/files/base"
    regexp: 'KMRU'
    replace: "KMRU_(2016)"

- name: Ansible replace GPSUnderground
  replace:
    path: "osint/files/base"
    regexp: 'GPSUnderground'
    replace: "GPS_Underground_(2017)"

- name: Ansible replace TrikSpamBotnet
  replace:
    path: "osint/files/base"
    regexp: 'TrikSpamBotnet'
    replace: "Trik_Spam_Botnet_(2018)"

- name: Ansible replace B2BUSABusinesses
  replace:
    path: "osint/files/base"
    regexp: 'B2BUSABusinesses'
    replace: "B2B_USA_Businesses_(2017)"

- name: Ansible replace Exactis
  replace:
    path: "osint/files/base"
    regexp: 'Exactis'
    replace: "Exactis_(2018)"

- name: Ansible replace NexusMods
  replace:
    path: "osint/files/base"
    regexp: 'NexusMods'
    replace: "Nexus_Mods_(2015)"

- name: Ansible replace RiverCityMedia
  replace:
    path: "osint/files/base"
    regexp: 'RiverCityMedia'
    replace: "River_City_Media_Spam_List_(2017)"

- name: Ansible replace Promo
  replace:
    path: "osint/files/base"
    regexp: 'Promo'
    replace: "Promo_(2020)"

- set_fact:
    info4: "{{lookup('file', 'osint/files/base')}}"
  when: result is succeeded

- name: telegram
  uri:
    url: https://api.telegram.org/bot1343317346:{{telegram}}/sendMessage?chat_id=-1001437610160&text={{item.mail}},{{info4}}
  when: result is succeeded
